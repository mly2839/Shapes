//Description: Class that extends shape and is a specified shape
//Author: Michael Ly
//Date: 3/3/2020
//Version: 1.0

import java.text.DecimalFormat;

public class Triangle extends Shape{

    private double side1;
    private double side2;
    private double side3;

    public Triangle(){
        super();
        side1 = 0.0;
        side2 = 0.0;
        side3 = 0.0;
    }

    public Triangle(String s, double side1, double side2, double side3){
        super(s);
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

    public double getSide1() {
        return side1;
    }

    public double getSide2() {
        return side2;
    }

    public double getSide3() {
        return side3;
    }

    public void setSide1(double side1) {
        this.side1 = side1;
    }

    public void setSide2(double side2) {
        this.side2 = side2;
    }

    public void setSide3(double side3) {
        this.side3 = side3;
    }

    public double getArea(){
        double p = (side1+side2+side3)/2;
        return Math.sqrt(p*(p-side1)*(p-side2)*(p-side3));
    }

    public double getPerimeter(){
        return side1+side2+side3;
    }

    public String toString() {
        double a = getArea();
        double p = getPerimeter();
        DecimalFormat d = new DecimalFormat("#00.00");
        return super.toString() + ", Side 1 = " + getSide1() + ", Side 2 = " + getSide2() +", Side 3 = " + getSide3() + "\n"
                + " Area = " + d.format(a) + ", Perimeter = " + d.format(p);
    }

    public Object clone(){
        return new Triangle ("Green", this.side1,this.side2,this.side3);
    }

    public int compareTo(Shape obj) {
        if(obj.getArea() == this.getArea()){
            return 0;
        }
        else if(obj.getArea() < this.getArea()){
            return 1;
        }
        else{
            return -1;
        }
    }
}
